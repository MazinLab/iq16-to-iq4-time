-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iqx4_and_time is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    dac_iq_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dac_iq_TVALID : IN STD_LOGIC;
    dac_iq_TREADY : OUT STD_LOGIC;
    dac_iq_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dac_iq_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dac_iq_TUSER : IN STD_LOGIC_VECTOR (7 downto 0);
    dac_iq_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    iq4x_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    iq4x_TVALID : OUT STD_LOGIC;
    iq4x_TREADY : IN STD_LOGIC;
    iq4x_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    iq4x_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    iq4x_TUSER : OUT STD_LOGIC_VECTOR (8 downto 0);
    iq4x_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    time_r_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    time_r_TVALID : OUT STD_LOGIC;
    time_r_TREADY : IN STD_LOGIC );
end;


architecture behav of iqx4_and_time is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "iqx4_and_time_iqx4_and_time,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.025000,HLS_SYN_LAT=4,HLS_SYN_TPT=4,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=433,HLS_SYN_LUT=207,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal p_time_V : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal dac_iq_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal iq4x_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal time_r_TDATA_blk_n : STD_LOGIC;
    signal tmp_last_V_reg_230 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal regslice_both_iq4x_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_time_r_U_apdone_blk : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal out_user_V_fu_143_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_user_V_reg_235 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_data_V_fu_152_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal out_data_V_1_reg_248 : STD_LOGIC_VECTOR (127 downto 0);
    signal out_data_V_2_reg_253 : STD_LOGIC_VECTOR (127 downto 0);
    signal out_data_V_3_reg_258 : STD_LOGIC_VECTOR (127 downto 0);
    signal out_user_V_1_fu_212_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal out_user_V_2_fu_218_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal out_user_V_3_fu_224_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal add_ln886_fu_200_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal trunc_ln232_fu_139_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln886_fu_196_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_dac_iq_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dac_iq_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dac_iq_TVALID_int_regslice : STD_LOGIC;
    signal dac_iq_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dac_iq_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dac_iq_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dac_iq_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dac_iq_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dac_iq_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dac_iq_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dac_iq_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dac_iq_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dac_iq_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dac_iq_V_user_V_U_apdone_blk : STD_LOGIC;
    signal dac_iq_TUSER_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_dac_iq_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dac_iq_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dac_iq_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dac_iq_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dac_iq_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dac_iq_V_last_V_U_ack_in : STD_LOGIC;
    signal iq4x_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal iq4x_TVALID_int_regslice : STD_LOGIC;
    signal iq4x_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_iq4x_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq4x_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq4x_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq4x_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq4x_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_iq4x_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq4x_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq4x_V_user_V_U_apdone_blk : STD_LOGIC;
    signal iq4x_TUSER_int_regslice : STD_LOGIC_VECTOR (8 downto 0);
    signal regslice_both_iq4x_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq4x_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_iq4x_V_last_V_U_apdone_blk : STD_LOGIC;
    signal iq4x_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_iq4x_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_iq4x_V_last_V_U_vld_out : STD_LOGIC;
    signal time_r_TDATA_int_regslice : STD_LOGIC_VECTOR (39 downto 0);
    signal time_r_TVALID_int_regslice : STD_LOGIC;
    signal time_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_time_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component iqx4_and_time_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_dac_iq_V_data_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dac_iq_TDATA,
        vld_in => dac_iq_TVALID,
        ack_in => regslice_both_dac_iq_V_data_V_U_ack_in,
        data_out => dac_iq_TDATA_int_regslice,
        vld_out => dac_iq_TVALID_int_regslice,
        ack_out => dac_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_dac_iq_V_data_V_U_apdone_blk);

    regslice_both_dac_iq_V_keep_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dac_iq_TKEEP,
        vld_in => dac_iq_TVALID,
        ack_in => regslice_both_dac_iq_V_keep_V_U_ack_in,
        data_out => dac_iq_TKEEP_int_regslice,
        vld_out => regslice_both_dac_iq_V_keep_V_U_vld_out,
        ack_out => dac_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_dac_iq_V_keep_V_U_apdone_blk);

    regslice_both_dac_iq_V_strb_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dac_iq_TSTRB,
        vld_in => dac_iq_TVALID,
        ack_in => regslice_both_dac_iq_V_strb_V_U_ack_in,
        data_out => dac_iq_TSTRB_int_regslice,
        vld_out => regslice_both_dac_iq_V_strb_V_U_vld_out,
        ack_out => dac_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_dac_iq_V_strb_V_U_apdone_blk);

    regslice_both_dac_iq_V_user_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dac_iq_TUSER,
        vld_in => dac_iq_TVALID,
        ack_in => regslice_both_dac_iq_V_user_V_U_ack_in,
        data_out => dac_iq_TUSER_int_regslice,
        vld_out => regslice_both_dac_iq_V_user_V_U_vld_out,
        ack_out => dac_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_dac_iq_V_user_V_U_apdone_blk);

    regslice_both_dac_iq_V_last_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dac_iq_TLAST,
        vld_in => dac_iq_TVALID,
        ack_in => regslice_both_dac_iq_V_last_V_U_ack_in,
        data_out => dac_iq_TLAST_int_regslice,
        vld_out => regslice_both_dac_iq_V_last_V_U_vld_out,
        ack_out => dac_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_dac_iq_V_last_V_U_apdone_blk);

    regslice_both_iq4x_V_data_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iq4x_TDATA_int_regslice,
        vld_in => iq4x_TVALID_int_regslice,
        ack_in => iq4x_TREADY_int_regslice,
        data_out => iq4x_TDATA,
        vld_out => regslice_both_iq4x_V_data_V_U_vld_out,
        ack_out => iq4x_TREADY,
        apdone_blk => regslice_both_iq4x_V_data_V_U_apdone_blk);

    regslice_both_iq4x_V_keep_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => iq4x_TVALID_int_regslice,
        ack_in => regslice_both_iq4x_V_keep_V_U_ack_in_dummy,
        data_out => iq4x_TKEEP,
        vld_out => regslice_both_iq4x_V_keep_V_U_vld_out,
        ack_out => iq4x_TREADY,
        apdone_blk => regslice_both_iq4x_V_keep_V_U_apdone_blk);

    regslice_both_iq4x_V_strb_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv16_0,
        vld_in => iq4x_TVALID_int_regslice,
        ack_in => regslice_both_iq4x_V_strb_V_U_ack_in_dummy,
        data_out => iq4x_TSTRB,
        vld_out => regslice_both_iq4x_V_strb_V_U_vld_out,
        ack_out => iq4x_TREADY,
        apdone_blk => regslice_both_iq4x_V_strb_V_U_apdone_blk);

    regslice_both_iq4x_V_user_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 9)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iq4x_TUSER_int_regslice,
        vld_in => iq4x_TVALID_int_regslice,
        ack_in => regslice_both_iq4x_V_user_V_U_ack_in_dummy,
        data_out => iq4x_TUSER,
        vld_out => regslice_both_iq4x_V_user_V_U_vld_out,
        ack_out => iq4x_TREADY,
        apdone_blk => regslice_both_iq4x_V_user_V_U_apdone_blk);

    regslice_both_iq4x_V_last_V_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => iq4x_TLAST_int_regslice,
        vld_in => iq4x_TVALID_int_regslice,
        ack_in => regslice_both_iq4x_V_last_V_U_ack_in_dummy,
        data_out => iq4x_TLAST,
        vld_out => regslice_both_iq4x_V_last_V_U_vld_out,
        ack_out => iq4x_TREADY,
        apdone_blk => regslice_both_iq4x_V_last_V_U_apdone_blk);

    regslice_both_time_r_U : component iqx4_and_time_regslice_both
    generic map (
        DataWidth => 40)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => time_r_TDATA_int_regslice,
        vld_in => time_r_TVALID_int_regslice,
        ack_in => time_r_TREADY_int_regslice,
        data_out => time_r_TDATA,
        vld_out => regslice_both_time_r_U_vld_out,
        ack_out => time_r_TREADY,
        apdone_blk => regslice_both_time_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                out_data_V_1_reg_248 <= dac_iq_TDATA_int_regslice(255 downto 128);
                out_data_V_2_reg_253 <= dac_iq_TDATA_int_regslice(383 downto 256);
                out_data_V_3_reg_258 <= dac_iq_TDATA_int_regslice(511 downto 384);
                    out_user_V_reg_235(8 downto 2) <= out_user_V_fu_143_p3(8 downto 2);
                tmp_last_V_reg_230 <= dac_iq_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_time_V <= add_ln886_fu_200_p2;
            end if;
        end if;
    end process;
    out_user_V_reg_235(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln886_fu_200_p2 <= std_logic_vector(unsigned(p_time_V) + unsigned(zext_ln886_fu_196_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_iq4x_V_data_V_U_apdone_blk, regslice_both_time_r_U_apdone_blk, dac_iq_TVALID_int_regslice, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iq4x_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_time_r_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq4x_V_data_V_U_apdone_blk = ap_const_logic_1))) or ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (dac_iq_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state1_io, regslice_both_iq4x_V_data_V_U_apdone_blk, regslice_both_time_r_U_apdone_blk, dac_iq_TVALID_int_regslice, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iq4x_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_time_r_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq4x_V_data_V_U_apdone_blk = ap_const_logic_1))) or ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (dac_iq_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state1_io, regslice_both_iq4x_V_data_V_U_apdone_blk, regslice_both_time_r_U_apdone_blk, dac_iq_TVALID_int_regslice, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((iq4x_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_time_r_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq4x_V_data_V_U_apdone_blk = ap_const_logic_1))) or ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (dac_iq_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_block_state2_io, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_block_state2_io, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state1_io_assign_proc : process(iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_state1_io <= ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(dac_iq_TVALID_int_regslice, iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0) or (dac_iq_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(iq4x_TREADY_int_regslice, time_r_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((time_r_TREADY_int_regslice = ap_const_logic_0) or (iq4x_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (iq4x_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(iq4x_TREADY_int_regslice)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (iq4x_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(regslice_both_iq4x_V_data_V_U_apdone_blk, regslice_both_time_r_U_apdone_blk, iq4x_TREADY_int_regslice)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((iq4x_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_time_r_U_apdone_blk = ap_const_logic_1) or (regslice_both_iq4x_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    dac_iq_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, dac_iq_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dac_iq_TDATA_blk_n <= dac_iq_TVALID_int_regslice;
        else 
            dac_iq_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dac_iq_TREADY <= regslice_both_dac_iq_V_data_V_U_ack_in;

    dac_iq_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dac_iq_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dac_iq_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    iq4x_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter1, iq4x_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iq4x_TDATA_blk_n <= iq4x_TREADY_int_regslice;
        else 
            iq4x_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    iq4x_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, out_data_V_fu_152_p1, out_data_V_1_reg_248, out_data_V_2_reg_253, out_data_V_3_reg_258, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                iq4x_TDATA_int_regslice <= out_data_V_3_reg_258;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                iq4x_TDATA_int_regslice <= out_data_V_2_reg_253;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iq4x_TDATA_int_regslice <= out_data_V_1_reg_248;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iq4x_TDATA_int_regslice <= out_data_V_fu_152_p1;
            else 
                iq4x_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            iq4x_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iq4x_TLAST_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_last_V_reg_230, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            iq4x_TLAST_int_regslice <= tmp_last_V_reg_230;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iq4x_TLAST_int_regslice <= ap_const_lv1_0;
        else 
            iq4x_TLAST_int_regslice <= "X";
        end if; 
    end process;


    iq4x_TUSER_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, out_user_V_fu_143_p3, out_user_V_1_fu_212_p2, out_user_V_2_fu_218_p2, out_user_V_3_fu_224_p2, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                iq4x_TUSER_int_regslice <= out_user_V_3_fu_224_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                iq4x_TUSER_int_regslice <= out_user_V_2_fu_218_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iq4x_TUSER_int_regslice <= out_user_V_1_fu_212_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iq4x_TUSER_int_regslice <= out_user_V_fu_143_p3;
            else 
                iq4x_TUSER_int_regslice <= "XXXXXXXXX";
            end if;
        else 
            iq4x_TUSER_int_regslice <= "XXXXXXXXX";
        end if; 
    end process;

    iq4x_TVALID <= regslice_both_iq4x_V_data_V_U_vld_out;

    iq4x_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iq4x_TVALID_int_regslice <= ap_const_logic_1;
        else 
            iq4x_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    out_data_V_fu_152_p1 <= dac_iq_TDATA_int_regslice(128 - 1 downto 0);
    out_user_V_1_fu_212_p2 <= (out_user_V_reg_235 or ap_const_lv9_1);
    out_user_V_2_fu_218_p2 <= (out_user_V_reg_235 or ap_const_lv9_2);
    out_user_V_3_fu_224_p2 <= (out_user_V_reg_235 or ap_const_lv9_3);
    out_user_V_fu_143_p3 <= (trunc_ln232_fu_139_p1 & ap_const_lv2_0);

    time_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, time_r_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            time_r_TDATA_blk_n <= time_r_TREADY_int_regslice;
        else 
            time_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    time_r_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_time_V),40));
    time_r_TVALID <= regslice_both_time_r_U_vld_out;

    time_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            time_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            time_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln232_fu_139_p1 <= dac_iq_TUSER_int_regslice(7 - 1 downto 0);
    zext_ln886_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dac_iq_TLAST_int_regslice),36));
end behav;
